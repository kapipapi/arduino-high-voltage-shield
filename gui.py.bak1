#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Oct 14, 2021 03:47:19 PM CEST  platform: Linux

import sys
import serial.tools.list_ports

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1(root)
    root.mainloop()


w = None

MIN_SPEED_HZ = 500
MAX_SPEED_HZ = 1500
BAUDRATE = 9600
TIMEOUT_SEC = 1


def valid_speed_number(P):
    if str.isdigit(P) or P == "":
        if MIN_SPEED_HZ <= P <= MAX_SPEED_HZ:
            return True
        return False
    else:
        return False


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("600x180+642+319")
        top.minsize(330, 180)
        top.maxsize(1905, 1050)
        top.resizable(1, 1)
        top.title("Motor steering")

        self.Message = tk.StringVar(top)
        self.Message.set("MESSAGE")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.017, rely=0.056, height=31, width=139)
        self.Label1.configure(text='''Select port:''')

        self.devices = [port.device for port in serial.tools.list_ports.comports()]

        self.TCombobox1 = ttk.Combobox(top)
        self.TCombobox1.place(relx=0.25, rely=0.056, relheight=0.172, relwidth=0.728)
        self.TCombobox1.configure(cursor="fleur")
        if len(self.devices) > 0:
            self.TCombobox1.set(self.devices[0])
        self.TCombobox1['values'] = self.devices
        self.TCombobox1['state'] = 'readonly'

        self.Label1_1 = tk.Label(top)
        self.Label1_1.place(relx=0.017, rely=0.278, height=31, width=139)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(text='''Speed: [Hz]''')

        vcmd = (top.register(valid_speed_number))
        self.Entry1 = tk.Entry(top, validate='all', validatecommand=(vcmd, '%P'))
        self.Entry1.place(relx=0.25, rely=0.278, height=33, relwidth=0.543)
        self.Entry1.configure(background="white")
        self.Entry1.configure(cursor="fleur")
        self.Entry1.configure(font="TkFixedFont")

        self.Button1 = tk.Button(top, command=self.send_message)
        self.Button1.place(relx=0.8, rely=0.278, height=33, width=105)
        self.Button1.configure(borderwidth="2")
        self.Button1.configure(cursor="fleur")
        self.Button1.configure(text='''Set''')

        self.Label1_1_1 = tk.Label(top)
        self.Label1_1_1.place(relx=0.017, rely=0.5, height=31, width=139)
        self.Label1_1_1.configure(activebackground="#f9f9f9")
        self.Label1_1_1.configure(text='''Direction:''')

        self.Button1_1 = tk.Button(top)
        self.Button1_1.place(relx=0.8, rely=0.5, height=33, width=105)
        self.Button1_1.configure(activebackground="#f9f9f9")
        self.Button1_1.configure(borderwidth="2")
        self.Button1_1.configure(text='''Set''')

        self.TCombobox2 = ttk.Combobox(top)
        self.TCombobox2.place(relx=0.25, rely=0.5, relheight=0.172, relwidth=0.545)
        self.TCombobox2.set('CLOCKWISE')
        self.TCombobox2['values'] = ('CLOCKWISE', 'COUNTERCLOCKWISE')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.017, rely=0.722, height=41, width=579)
        self.Label2.configure(anchor='nw')
        self.Label2.configure(background="#ffffff")
        self.Label2.configure(borderwidth="2")
        self.Label2.configure(cursor="fleur")
        self.Label2.configure(justify='left')
        self.Label2.configure(textvariable=self.Message)

    def send_message(self):
        ser = serial.Serial(self.TCombobox1.get(), baudrate=BAUDRATE, timeout=TIMEOUT_SEC)
        self.Message.set(ser.name + " speed: " + self.Entry1.get())
        ser.write(bytes(f"speed:{self.Entry1.get()}\r", encoding='utf8'))
        ser.close()


if __name__ == '__main__':
    vp_start_gui()
